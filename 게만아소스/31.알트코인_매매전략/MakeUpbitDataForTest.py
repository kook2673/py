#-*-coding:utf-8 -*-
'''


$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Ìï¥Îãπ Ïª®ÌÖêÏ∏†Îäî Ï†úÍ∞Ä ÏßÅÏ†ë Ìà¨Ïûê ÌïòÍ∏∞ ÏúÑÌï¥ Ïù¥ Ï†ÑÎûµÏùÑ Ï∂îÍ∞Ä Í∞úÏÑ†Ìï¥ÏÑú Îçî Ï¢ãÏùÄ ÏÑ±Í≥ºÎ•º Î≥¥Ïó¨Ï£ºÎäî Í∞úÏù∏ Ï†ÑÎûµÏù¥ Ï°¥Ïû¨Ìï©ÎãàÎã§. 

Í≤åÎßåÏïÑ Ï∂îÍ∞Ä Í∞úÏÑ† Í∞úÏù∏ Ï†ÑÎûµÎì§..
https://blog.naver.com/zacra/223196497504

Í¥ÄÏã¨ ÏûàÏúºÏã† Î∂ÑÏùÄ ÏúÑ Ìè¨Ïä§ÌåÖÏùÑ Ï∞∏Í≥†ÌïòÏÑ∏Ïöî!

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$



ÏΩîÎìú Ïù¥Ìï¥ÌïòÎäîÎç∞ ÎèÑÏõÄ ÎêòÎäî ÏÑ§Î™Ö Ï∞∏Í≥† ÏòÅÏÉÅ!
https://youtu.be/IViI5gofQf4?si=Fnqm4_OmVfLnHCWD




Í¥ÄÎ†® Ìè¨Ïä§ÌåÖ
    
ÌååÏù¥Ïç¨ ÏóÖÎπÑÌä∏ ÏûêÎèôÎß§Îß§ ÏïåÌä∏ ÏΩîÏù∏Îì§Î°ú ÏàòÏùµÎÇ¥Í∏∞
https://blog.naver.com/zacra/223122965642

ÏúÑ Ìè¨Ïä§ÌåÖÏùÑ Íº≠ Ï∞∏Í≥†ÌïòÏÑ∏Ïöî!!!

üìå Í≤åÎßåÏïÑÏùò Î™®Îì† ÏΩîÎìúÎäî ÌäπÏ†ï Ï¢ÖÎ™© Ï∂îÏ≤úÏù¥ÎÇò Ìà¨Ïûê Í∂åÏú†Î•º ÏúÑÌïú Í≤ÉÏù¥ ÏïÑÎãôÎãàÎã§.  
Ï†úÏûëÏûêÏùò Í∞úÏù∏Ï†ÅÏù∏ Í≤¨Ìï¥Î•º Î∞îÌÉïÏúºÎ°ú Íµ¨ÏÑ±Îêú ÍµêÏú°Ïö© ÏòàÏãú ÏΩîÎìúÏù¥Î©∞, ÏàòÏùµÏùÑ Î≥¥Ïû•ÌïòÏßÄ ÏïäÏäµÎãàÎã§
Ïã§Ï†ú Ìà¨Ïûê ÌåêÎã® Î∞è Ïã§ÌñâÏùÄ Ï†ÑÏ†ÅÏúºÎ°ú ÏÇ¨Ïö©Ïûê Î≥∏Ïù∏Ïùò Ï±ÖÏûÑÏûÖÎãàÎã§.

Ï£ºÏãù/ÏΩîÏù∏ ÏûêÎèôÎß§Îß§ FAQ
https://blog.naver.com/zacra/223203988739

FAQÎ°ú Ìï¥Í≤∞ ÏïàÎêòÎäî Í∏∞Ïà†Ï†ÅÏù∏ Î¨∏Ï†úÎäî ÌÅ¥ÎûòÏä§101 Í∞ïÏùòÏùò ÎåìÍ∏ÄÏù¥ÎÇò ÏúÑ Ìè¨Ïä§ÌåÖÏóê ÎåìÍ∏ÄÎ°ú ÏïåÎ†§Ï£ºÏÑ∏Ïöî.
ÌååÏù¥Ïç¨ ÏΩîÎî©Ïóê ÎåÄÌïú ÎãµÎ≥ÄÎßå Í∞ÄÎä•Ìï©ÎãàÎã§. ÌòÑÌñâÎ≤ï ÏÉÅ Ìà¨Ïûê Í¥ÄÎ†® ÏßàÎ¨∏ÏùÄ ÎãµÎ≥Ä Î∂àÍ∞ÄÌïòÎã§Îäî Ï†ê ÏïåÎ†§ÎìúÎ†§Ïöî!


'''


import pyupbit


import pandas as pd
import pprint

import time


Tickers = pyupbit.get_tickers("KRW") #


stock_df_list = []

for ticker in Tickers:

    try:

        print("----->", ticker ,"<-----")
        df = pyupbit.get_ohlcv(ticker,interval="day",count=6000, period=0.3) 

        period = 14

        delta = df["close"].diff()
        up, down = delta.copy(), delta.copy()
        up[up < 0] = 0
        down[down > 0] = 0
        _gain = up.ewm(com=(period - 1), min_periods=period).mean()
        _loss = down.abs().ewm(com=(period - 1), min_periods=period).mean()
        RS = _gain / _loss

        df['RSI'] = pd.Series(100 - (100 / (1 + RS)), name="RSI")

        df['ma5_rsi_before'] = df['RSI'].rolling(5).mean().shift(1)
        df['ma5_rsi_before2'] = df['RSI'].rolling(5).mean().shift(2)

        df['prevRSI'] = df['RSI'].shift(1)
        df['prevRSI2'] = df['RSI'].shift(2)

        df['prevValue'] = df['value'].shift(1)
        df['prevValue2'] = df['value'].shift(2)

        df['prevClose'] = df['close'].shift(1)
        df['prevClose2'] = df['close'].shift(2)

        df['prevOpen'] = df['open'].shift(1)
        df['prevOpen2'] = df['open'].shift(2)

        df['prevLow'] = df['low'].shift(1)
        df['prevLow2'] = df['low'].shift(2)

        df['prevHigh'] = df['high'].shift(1)
        df['prevHigh2'] = df['high'].shift(2)

        df['prevChange'] = (df['prevClose'] - df['prevClose2']) / df['prevClose2'] #Ï†ÑÏùº Ï¢ÖÍ∞Ä Í∏∞Ï§Ä ÏàòÏùµÎ•†
        df['prevChange2'] = df['prevChange'].shift(1)

        df['Disparity5'] = df['prevClose'] / df['prevClose'].rolling(window=5).mean() * 100.0
        df['Disparity20'] = df['prevClose'] / df['prevClose'].rolling(window=20).mean() * 100.0


        df['ma5_before'] = df['close'].rolling(5).mean().shift(1)
        df['ma5_before2'] = df['close'].rolling(5).mean().shift(2)

        df['ma10_before'] = df['close'].rolling(10).mean().shift(1)
        df['ma10_before2'] = df['close'].rolling(10).mean().shift(2)

        df['ma20_before'] = df['close'].rolling(20).mean().shift(1)
        df['ma20_before2'] = df['close'].rolling(20).mean().shift(2)


        df['value_ma'] = df['value'].rolling(window=10).mean().shift(1)


        df.dropna(inplace=True) #Îç∞Ïù¥ÌÑ∞ ÏóÜÎäîÍ±¥ ÎÇ†Î¶∞Îã§!

    

        data_dict = {ticker: df}
        stock_df_list.append(data_dict)

        time.sleep(0.2)

    except Exception as e:
        print("Exception ", e)


# Combine the OHLCV data into a single DataFrame
combined_df = pd.concat([list(data_dict.values())[0].assign(ticker=ticker) for data_dict in stock_df_list for ticker in data_dict])

# Sort the combined DataFrame by date
combined_df.sort_index(inplace=True)


pprint.pprint(combined_df)
print(" len(combined_df) ", len(combined_df))


combined_df.to_csv("./UpbitDataAll.csv", index=True) 

print("Save Done!!")